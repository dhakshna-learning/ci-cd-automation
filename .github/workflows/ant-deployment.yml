name: CD deployment Pipeline

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      jira_ref:
        required: false
        type: string
      issue_number:
        required: false
        type: string
      debug:
        required: false
        type: string

permissions:
  id-token: write  
  contents: read

jobs:
  wait-for-approval:
    if: ${{ inputs.environment != 'Dev' }}
    name: Wait-for-Approval
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      devops_ids: ${{ steps.fetch_approvers.outputs.devops_ids }}
      test_ids: ${{ steps.fetch_approvers.outputs.test_ids }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          repository: dhakshna-learning/ci-cd-automation
          ref: master
          path: ci-cd-automation
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: get-ids
        id: fetch_approvers
        uses: dhakshna-learning/ci-cd-automation/.github/actions/get-ids@master
        with:
          branch: ${{ github.ref }}
          debug: ${{ inputs.Debug }}
      
      - name: Retrieve the Issue number
        id: get-issue
        shell: bash
        run: |
          ISSUE_ID=${{ inputs.issue_number }} >> "$GITHUB_OUTPUT"
          
          if [ -z "$ISSUE_ID" ]; then
            echo "Error: ISSUE_ID is empty"
            exit 1
          fi
          echo "Issue ID: $ISSUE_ID"

      - name: Wait for Approval
        uses: dhakshna-learning/ci-cd-automation/.github/actions/retrieve-issues@master
        id: wait_approval
        with:
          mode: "wait"
          issue-number: ${{ inputs.issue_number  }}
          secret: ${{ secrets.PEM_KEY }}
          approvers: ${{ steps.fetch_approvers.outputs.devops_ids }}

  deploy2Dev:
    name: Dev Deployment
    if: ${{ inputs.environment == 'Dev' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Deploying to ${{ inputs.environment }} environment
        run: |
          echo "Deploying to ${{ inputs.environment }} environment..."
          # Add your deployment commands here
          echo "Deployment to ${{ inputs.environment }} completed."
  
  deploy2Reg:
    name: Deployment to Regression
    needs: wait-for-approval
    if: ${{ inputs.environment != 'Dev' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Deployment to regression environments
        id: reg-deployment
        run: |
          echo "Deploying to Reg environment..."
          # Add your deployment commands here
          echo "Deployment to ${{ inputs.environment }} completed."

      - name: Waiting for Reg validation to be completed
        id: reg-approval
        uses: dhakshna-learning/ci-cd-automation/.github/actions/post-comments@master
        with:
          mode: "wait"
          issue-number: ${{ inputs.issue_number  }}
          secret: ${{ secrets.PEM_KEY }}
          approvers: ${{ needs.wait-for-approval.outputs.test_ids }}
          approval-message: "Regression Deployment is completed ðŸŽ¯, please validate and approve to proceed further...!"

name: CI Build Pipeline

on:
  workflow_call:
    inputs:
      ant_target:
        required: true
        type: string
      environment:
        required: true
        type: string
      jira_ref:
        required: true
        type: string

    outputs:
      issue_number:
        description: "Created Issue ID"
        value: ${{ jobs.code-build.outputs.issue_number }}
      devops_ids:
        description: "DevOps Team Approver IDs"
        value: ${{ jobs.Initialising.outputs.devops_ids }}

permissions:
  id-token: write  
  contents: read

jobs:
  Initialising:
    name: Initialisation
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      devops_ids: ${{ steps.check_approvers.outputs.devops_ids }}
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check Approvers
        id: check_approvers
        run: |
          DATA_FILE=".github/approvers.json"
          TEAMS=$(jq -r '.teams | keys[]' "$DATA_FILE")
          
          for team in $TEAMS; do
              # Extract IDs for the team
              user_ids=$(jq -r --arg team "$team" '.teams[$team][]?.id' "$DATA_FILE" | sort -u | paste -sd "," -)
          
              if [[ -n "$user_ids" ]]; then
                  echo "${team,,}_ids=$user_ids" >> "$GITHUB_OUTPUT"
                  echo "$team IDs: $user_ids"
              else
                  echo "Skipping $team (no approvers found)"
              fi
          done

      - name: Debug Outputs
        run: |
          echo -e "devops_ids: ${{ steps.check_approvers.outputs.devops_ids }}"

  code-build:
    name: Code-Build
    needs: Initialising
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      issue_number: ${{ steps.create_issue.outputs.issue-number }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4            
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ARN }}
          aws-region: ${{ vars.REGION }}

      - name: Run Ant Build
        run: |
          ant ${{ inputs.ant_target }}

          if [ $? -eq 0 ]; then
            echo "✅ ${{ inputs.ant_target }} completed successfully"
          else
            echo "❌ ${{ inputs.ant_target }} failed"
            exit 1
          fi

      - name: Uploading the artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-Artifacts
          path: ./build/jar/*

      - name: Checkout automation Repo
        uses: actions/checkout@v4
        with:
          repository: dhakshna-learning/ci-cd-automation
          ref: master
          path: ci-cd-automation
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Debug automation Repo
        run: |
          ls
          ls -ltra ./ci-cd-automation

      - name: creating issue for approval
        uses: dhakshna-learning/ci-cd-automation/.github/actions/create-issues@master
        id: create_issue
        with:
          mode: "create"
          issue-title: "[${{ inputs.jira_ref }}] Approval needed for deploying to ${{ inputs.environment }} environment"
          issue-body: |
            Hi Team,

            The build for the `${{ inputs.environment }}` environment has completed successfully. 

            Please review and approve the deployment to proceed.

            https://dcloudsystems.atlassian.net/browse/${{ inputs.jira_ref }}

            Thanks,
            DevOps Team
          approvers: ${{ needs.Initialising.outputs.devops_ids }}
          secret: ${{ secrets.PEM_KEY }}

      # - name: Parse the Issue Number
      #   id: parse_issue
      #   run: |
      #     ISSUE_NUMBER="${{ steps.create_issue.outputs.issue-number }}"
      #     if [[ -z "$ISSUE_NUMBER" ]]; then
      #       echo "❌ Issue number not found!"
      #       exit 1
      #     fi
      #     echo "✅ Issue number is $ISSUE_NUMBER"
      #     echo "issue-number=$ISSUE_NUMBER" >> "$GITHUB_OUTPUT"
